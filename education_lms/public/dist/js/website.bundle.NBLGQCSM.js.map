{
  "version": 3,
  "sources": ["../../../../../apps/education_lms/education_lms/public/js/profile.js", "../../../../../apps/education_lms/education_lms/public/js/common_functions.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/dom.js", "../../../../../apps/frappe/node_modules/frappe-charts/node_modules/style-inject/dist/style-inject.es.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/constants.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/objects/SvgTip.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/helpers.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/draw-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/draw.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/colors.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/animate.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/animation.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/BaseChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/export.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/css/chartsCss.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/AggregationChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/date-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/objects/ChartComponents.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/PercentageChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/PieChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/intervals.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/Heatmap.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/axis-chart-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/AxisChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/chart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/DonutChart.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/chart.js"],
  "sourcesContent": ["frappe.ready(() => {\n\thide_profile_and_dashboard_for_guest_users();\n});\n\nconst hide_profile_and_dashboard_for_guest_users = () => {\n\tif (frappe.session.user == \"Guest\") {\n\t\tlet links = $(\".nav-link\").filter(\n\t\t\t(i, elem) =>\n\t\t\t\t$(elem).text().trim() === \"My Profile\" ||\n\t\t\t\t$(elem).text().trim() === \"Dashboard\"\n\t\t);\n\t\tlinks.length && links.each((i, elem) => $(elem).addClass(\"hide\"));\n\t}\n};\n", "frappe.ready(() => {\n\tsetup_file_size();\n\n\t$(\".join-batch\").click((e) => {\n\t\tjoin_course(e);\n\t});\n\n\t$(\".notify-me\").click((e) => {\n\t\tnotify_user(e);\n\t});\n\n\t$(\".btn-chapter\").click((e) => {\n\t\tadd_chapter(e);\n\t});\n\n\t$(document).on(\"click\", \".btn-save-chapter\", (e) => {\n\t\tsave_chapter(e);\n\t});\n\n\t$(\".nav-link\").click((e) => {\n\t\tchange_hash(e);\n\t});\n\n\tif (window.location.hash) {\n\t\topen_tab();\n\t}\n\n\tif (window.location.pathname == \"/statistics\") {\n\t\tgenerate_graph(\"New Signups\", \"#new-signups\");\n\t\tgenerate_graph(\"Course Enrollments\", \"#course-enrollments\");\n\t\tgenerate_graph(\"Lesson Completion\", \"#lesson-completion\");\n\t\tgenerate_course_completion_graph();\n\t}\n});\n\nconst setup_file_size = () => {\n\tfrappe.provide(\"frappe.form.formatters\");\n\tfrappe.form.formatters.FileSize = file_size;\n};\n\nconst file_size = (value) => {\n\tif (value > 1048576) {\n\t\tvalue = flt(flt(value) / 1048576, 1) + \"M\";\n\t} else if (value > 1024) {\n\t\tvalue = flt(flt(value) / 1024, 1) + \"K\";\n\t}\n\treturn value;\n};\n\nconst join_course = (e) => {\n\te.preventDefault();\n\tlet course = $(e.currentTarget).attr(\"data-course\");\n\tif (frappe.session.user == \"Guest\") {\n\t\twindow.location.href = `/login?redirect-to=/courses/${course}`;\n\t\treturn;\n\t}\n\n\tlet batch = $(e.currentTarget).attr(\"data-batch\");\n\tbatch = batch ? decodeURIComponent(batch) : \"\";\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_batch_membership.lms_batch_membership.create_membership\",\n\t\targs: {\n\t\t\tbatch: batch ? batch : \"\",\n\t\t\tcourse: course,\n\t\t},\n\t\tcallback: (data) => {\n\t\t\tif (data.message == \"OK\") {\n\t\t\t\t$(\".no-preview-modal\").modal(\"hide\");\n\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage: __(\"Enrolled successfully\"),\n\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t},\n\t\t\t\t\t3\n\t\t\t\t);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\twindow.location.href = `/courses/${course}/learn/1.1`;\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t},\n\t});\n};\n\nconst notify_user = (e) => {\n\te.preventDefault();\n\tvar course = decodeURIComponent($(e.currentTarget).attr(\"data-course\"));\n\tif (frappe.session.user == \"Guest\") {\n\t\twindow.location.href = `/login?redirect-to=/courses/${course}`;\n\t\treturn;\n\t}\n\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_course_interest.lms_course_interest.capture_interest\",\n\t\targs: {\n\t\t\tcourse: course,\n\t\t},\n\t\tcallback: (data) => {\n\t\t\t$(\".no-preview-modal\").modal(\"hide\");\n\t\t\tfrappe.show_alert(\n\t\t\t\t{\n\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t\"You have opted to be notified for this course. You will receive an email when the course becomes available.\"\n\t\t\t\t\t),\n\t\t\t\t\tindicator: \"green\",\n\t\t\t\t},\n\t\t\t\t3\n\t\t\t);\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t}, 3000);\n\t\t},\n\t});\n};\n\nconst add_chapter = (e) => {\n\tif ($(\".new-chapter\").length) {\n\t\tscroll_to_chapter_container();\n\t\treturn;\n\t}\n\n\tlet next_index = $(\"[data-index]\").last().data(\"index\") + 1 || 1;\n\tlet add_after = $(`.chapter-parent:last`).length\n\t\t? $(`.chapter-parent:last`)\n\t\t: $(\"#outline-heading\");\n\n\t$(`<div class=\"chapter-parent chapter-edit new-chapter\">\n        <div contenteditable=\"true\" data-placeholder=\"${__(\n\t\t\t\"Chapter Name\"\n\t\t)}\" class=\"chapter-title-main\"></div>\n        <div class=\"chapter-description small my-2\" contenteditable=\"true\"\n            data-placeholder=\"${__(\"Short Description\")}\"></div>\n        <button class=\"btn btn-sm btn-secondary d-block btn-save-chapter\"\n        data-index=\"${next_index}\"> ${__(\"Save\")} </button>\n        </div>`).insertAfter(add_after);\n\n\tscroll_to_chapter_container();\n};\n\nconst scroll_to_chapter_container = () => {\n\t$([document.documentElement, document.body]).animate(\n\t\t{\n\t\t\tscrollTop: $(\".new-chapter\").offset().top,\n\t\t},\n\t\t1000\n\t);\n\t$(\".new-chapter\").find(\".chapter-title-main\").focus();\n};\n\nconst save_chapter = (e) => {\n\tlet target = $(e.currentTarget);\n\tlet parent = target.closest(\".chapter-parent\");\n\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_course.lms_course.save_chapter\",\n\t\targs: {\n\t\t\tcourse: $(\"#title\").data(\"course\"),\n\t\t\ttitle: parent.find(\".chapter-title-main\").text(),\n\t\t\tchapter_description: parent.find(\".chapter-description\").text(),\n\t\t\tidx: target.data(\"index\"),\n\t\t\tchapter: target.data(\"chapter\") ? target.data(\"chapter\") : \"\",\n\t\t},\n\t\tcallback: (data) => {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saved\"),\n\t\t\t\tindicator: \"green\",\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t}, 1000);\n\t\t},\n\t});\n};\n\nconst generate_graph = (chart_name, element, type = \"line\") => {\n\tlet date = frappe.datetime;\n\n\tfrappe.call({\n\t\tmethod: \"lms.lms.utils.get_chart_data\",\n\t\targs: {\n\t\t\tchart_name: chart_name,\n\t\t\ttimespan: \"Select Date Range\",\n\t\t\ttimegrain: \"Daily\",\n\t\t\tfrom_date: date.add_days(date.get_today(), -30),\n\t\t\tto_date: date.add_days(date.get_today(), +1),\n\t\t},\n\t\tcallback: (data) => {\n\t\t\trender_chart(data.message, chart_name, element, type);\n\t\t},\n\t});\n};\n\nconst render_chart = (data, chart_name, element, type) => {\n\tconst chart = new frappe.Chart(element, {\n\t\ttitle: chart_name,\n\t\tdata: data,\n\t\ttype: type,\n\t\theight: 250,\n\t\tcolors: [\"#4563f1\"],\n\t\taxisOptions: {\n\t\t\txIsSeries: 1,\n\t\t},\n\t\tlineOptions: {\n\t\t\tregionFill: 1,\n\t\t},\n\t});\n};\n\nconst generate_course_completion_graph = () => {\n\tfrappe.call({\n\t\tmethod: \"lms.lms.utils.get_course_completion_data\",\n\t\tcallback: (data) => {\n\t\t\trender_chart(\n\t\t\t\tdata.message,\n\t\t\t\t\"Course Completion\",\n\t\t\t\t\"#course-completion\",\n\t\t\t\t\"pie\"\n\t\t\t);\n\t\t},\n\t});\n};\n\nconst change_hash = (e) => {\n\twindow.location.hash = $(e.currentTarget).attr(\"href\");\n};\n\nconst open_tab = () => {\n\t$(`a[href=\"${window.location.hash}\"]`).click();\n};\n", "export function $(expr, con) {\n\treturn typeof expr === \"string\" ? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node) {\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif (typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n\t\trect.left >= 0 &&\n\t\trect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true);\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif (!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass = 'active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif (index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const LEGEND_ITEM_WIDTH = 150;\nexport const SERIES_LABEL_SPACE_RATIO = 0.6;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 16;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 7.48;\nconst DEFAULT_CHART_COLORS = ['pink', 'blue', 'green', 'grey', 'red', 'yellow', 'purple', 'teal', 'cyan', 'orange'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n", "import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.list = this.container.querySelector('.data-point-list');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif (this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif (this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\n\t\tif (this.listValues.length > 4) {\n\t\t\tthis.list.classList.add('tooltip-grid');\n\t\t} else {\n\t\t\tthis.list.classList.remove('tooltip-grid');\n\t\t}\n\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\t\t\tlet li = $.create('li', {\n\t\t\t\tinnerHTML: `<div class=\"tooltip-legend\" style=\"background: ${color};\"></div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"tooltip-value\">${value === 0 || value ? value : ''}</div>\n\t\t\t\t\t\t<div class=\"tooltip-label\">${set.title ? set.title : ''}</div>\n\t\t\t\t\t</div>`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width / 2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif (this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if (this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n", "import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }", "import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif (extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len - 3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet l = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened * 100) / 100 + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by Fran\u00E7ois Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points = [];\n\tconst length = Math.min(xList.length, yList.length);\n\t\n\tfor (let i = 0; i < xList.length; i++) {\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n\n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n\n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n\n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n\n\treturn pointStr(points, bezierCommand);\n}\n", "import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber, round } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 18;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#E2E6E9';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\" ? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif (typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (i === \"className\") { i = \"class\"; }\n\t\t\tif (i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform = '', parent = undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif (parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className = '') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className = '', stroke = 'none', fill = 'none', strokeWidth = 2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId = 'path-fill-gradient' + '-' + color + '-' + (lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif (lighter) {\n\t\topacities = [0.15, 0.05, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function rightRoundedBar(x, width, height) {\n\t// https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n\tlet radius = height / 2;\n\tlet xOffset = width - radius;\n\n\treturn `M${x},0 h${xOffset} q${radius},0 ${radius},${radius} q0,${radius} -${radius},${radius} h-${xOffset} v${height}z`;\n}\n\nexport function leftRoundedBar(x, width, height) {\n\tlet radius = height / 2;\n\tlet xOffset = width - radius;\n\n\treturn `M${x + radius},0 h${xOffset} v${height} h-${xOffset} q-${radius}, 0 -${radius},-${radius} q0,-${radius} ${radius},-${radius}z`;\n}\n\nexport function percentageBar(x, y, width, height, isFirst, isLast, fill = 'none') {\n\tif (isLast) {\n\t\tlet pathStr = rightRoundedBar(x, width, height);\n\t\treturn makePath(pathStr, 'percentage-bar', null, fill);\n\t}\n\n\tif (isFirst) {\n\t\tlet pathStr = leftRoundedBar(x, width, height);\n\t\treturn makePath(pathStr, 'percentage-bar', null, fill);\n\t}\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill = 'none', data = {}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendDot(x, y, size, radius, fill = 'none', label, value, font_size = null, truncate = false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\tif (!font_size) font_size = FONT_SIZE;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tx: 0,\n\t\ty: 4 - size,\n\t\theight: size,\n\t\twidth: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tlet textLabel = createSVG('text', {\n\t\tclassName: 'legend-dataset-label',\n\t\tx: size,\n\t\ty: 0,\n\t\tdx: (font_size) + 'px',\n\t\tdy: (font_size / 3) + 'px',\n\t\t'font-size': (font_size * 1.6) + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label\n\t});\n\n\tlet textValue = null;\n\tif (value) {\n\t\ttextValue = createSVG('text', {\n\t\t\tclassName: 'legend-dataset-value',\n\t\t\tx: size,\n\t\t\ty: FONT_SIZE + 10,\n\t\t\tdx: (FONT_SIZE) + 'px',\n\t\t\tdy: (FONT_SIZE / 3) + 'px',\n\t\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t\t'text-anchor': 'start',\n\t\t\tinnerHTML: value\n\t\t});\n\t}\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(textLabel);\n\n\tif (value && textValue) {\n\t\tgroup.appendChild(textValue);\n\t}\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || \"var(--charts-label-color)\";\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options = {}) {\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${x}, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options = {}) {\n\tif (!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) {\n\t\tif (options.numberFormatter) {\n\t\t\tlabel = options.numberFormatter(label);\n\t\t} else {\n\t\t\tlabel = shortenLargeNumber(label);\n\t\t}\n\t}\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\" : \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif (text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options = {}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif (!options.pos) options.pos = 'left';\n\tif (!options.offset) options.offset = 0;\n\tif (!options.mode) options.mode = 'span';\n\tif (!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif (!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif (options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\tif (typeof label === \"number\") label = round(label);\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers,\n\t\tnumberFormatter: options.numberFormatter,\n\t});\n}\n\nexport function xLine(x, label, height, options = {}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif (!options.pos) options.pos = 'bottom';\n\tif (!options.offset) options.offset = 0;\n\tif (!options.mode) options.mode = 'span';\n\tif (!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif (options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options = {}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif (!options.labelPos) options.labelPos = 'right';\n\tif (!options.lineType) options.lineType = 'dashed';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options = {}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: options.fill || `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif (!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label + \"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label = '', index = 0, offset = 0, meta = {}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif (height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\t// x y h w\n\n\t// M{x},{y+r}\n\t// q0,-{r} {r},-{r}\n\t// q{r},0 {r},{r}\n\t// v{h-r}\n\t// h-{w}z\n\n\t// let radius = width/2;\n\t// let pathStr = `M${x},${y+radius} q0,-${radius} ${radius},-${radius} q${radius},0 ${radius},${radius} v${height-radius} h-${width}z`\n\n\t// let rect = createSVG('path', {\n\t// \tclassName: 'bar mini',\n\t// \td: pathStr,\n\t// \tstyles: { fill: color },\n\t// \tx: x,\n\t// \ty: y,\n\t// \t'data-point-index': index,\n\t// });\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif (!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width / 2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label = '', index = 0, hideDotBorder = false) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}; ${hideDotBorder ? `stroke: ${color}`: ''}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif (!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options = {}, meta = {}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\" + pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif (options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif (options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n", "const PRESET_COLOR_MAP = {\n\t'pink': '#F683AE',\n\t'blue': '#318AD8',\n\t'green': '#48BB74',\n\t'grey': '#A6B1B9',\n\t'red': '#F56B6B',\n\t'yellow': '#FACF7A',\n\t'purple': '#44427B',\n\t'teal': '#5FD8C4',\n\t'cyan': '#15CCEF',\n\t'orange': '#F8814F',\n\t'light-pink': '#FED7E5',\n\t'light-blue': '#BFDDF7',\n\t'light-green': '#48BB74',\n\t'light-grey': '#F4F5F6',\n\t'light-red': '#F6DFDF',\n\t'light-yellow': '#FEE9BF',\n\t'light-purple': '#E8E8F7',\n\t'light-teal': '#D3FDF6',\n\t'light-cyan': '#DDF8FD',\n\t'light-orange': '#FECDB8'\n};\n\nfunction limitColor(r) {\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col, 16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n", "import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{ transform: newCoord.join(', ') },\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{ transform: old }\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset = 0, meta = {}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif (bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{ width: width, height: height },\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, { width: width, height: height, x: x, y: y }, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif (dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, { cx: x, cy: y }, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, { d: \"M\" + pointsStr }, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif (paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{ d: \"M\" + regStartPt + pointsStr + regEndPt },\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, { d: pathStr }, UNIT_ANIM_DUR, STD_EASING];\n}\n", "// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType = \"linear\", type = undefined, oldValues = {}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor (var attributeName in props) {\n\t\tlet animateElement;\n\t\tif (attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur / 1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif (type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif (type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif (elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif (svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif (animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n", "import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { LEGEND_ITEM_WIDTH } from '../utils/constants';\nimport {\n\tBASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS\n} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: (typeof options.showLegend !== 'undefined') ? options.showLegend : 1,\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\tdisableEntryAnimation: options.disableEntryAnimation || 0,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif (!this.title.length) { m.titleHeight = 0; }\n\t\tif (!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif (this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif (!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif (this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() { }\n\n\tdraw(onlyWidthChange = false, init = false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif (init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => { this.update(this.data, true); }, this.initTimeout);\n\t\t}\n\t\t\n\t\tif (this.config.showLegend) {\n\t\t\tthis.renderLegend();\n\t\t}\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() { } // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif (this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif (this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif (this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif (this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif (this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data, drawing = false) {\n\t\tif (!data) console.error('No data to update.');\n\t\tif (!drawing) data = deepClone(data);\n\t\tconst animate = drawing ? !this.config.disableEntryAnimation : this.config.animate;\n\t\t\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, animate);\n\t}\n\n\trender(components = this.components, animate = true) {\n\t\tif (this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif (elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif (this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend(dataset) {\n\t\tthis.legendArea.textContent = '';\n\t\tlet count = 0;\n\t\tlet y = 0;\n\n\t\tdataset.map((data, index) => {\n\t\t\tlet divisor = Math.floor(this.width / LEGEND_ITEM_WIDTH);\n\t\t\tif (count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += this.config.legendRowHeight;\n\t\t\t}\n\t\t\tlet x = LEGEND_ITEM_WIDTH * count;\n\t\t\tlet dot = this.makeLegend(data, index, x, y);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n\n\tmakeLegend() { }\n\n\n\tsetupNavigation(init = false) {\n\t\tif (!this.config.isNavigable) return;\n\n\t\tif (init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif (isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif (this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() { }\n\tupdateOverlay() { }\n\tbindOverlay() { }\n\tbindUnits() { }\n\n\tonLeftArrow() { }\n\tonRightArrow() { }\n\tonUpArrow() { }\n\tonDownArrow() { }\n\tonEnterKey() { }\n\n\taddDataPoint() { }\n\tremoveDataPoint() { }\n\n\tgetDataPoint() { }\n\tsetCurrentDataPoint() { }\n\n\tupdateDataset() { }\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n", "import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, { type: \"image/svg+xml; charset=utf-8\" });\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function () {\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n", "export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";", "import BaseChart from './BaseChart';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t\tthis.config.legendRowHeight = 60;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif (allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices - 1);\n\t\t\tlet remaining = allTotals.slice(maxSlices - 1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => { sumOfRemaining += d[0]; });\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices - 1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\t\tsuper.renderLegend(this.legendTotals);\n\t}\n\n\tmakeLegend(data, index, x_pos, y_pos) {\n\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(data) : data;\n\n\t\treturn legendDot(\n\t\t\tx_pos,\n\t\t\ty_pos,\n\t\t\t12, // size\n\t\t\t3, // dot radius\n\t\t\tthis.colors[index], // fill\n\t\t\tthis.state.labels[index], // label\n\t\t\tformatted, // value\n\t\t\tnull, // base_font_size\n\t\t\tthis.config.truncateLegends // truncate_legends\n\t\t);\n\t}\n}\n", "// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm > 9 ? '' : '0') + mm,\n\t\t(dd > 9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime() / NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif (roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short = false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth(month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif (day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n", "import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport {\n\ttranslateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr\n} from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof (this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif (animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\tconst numberOfPoints = data.xPositions.length;\n\t\t\treturn data.xPositions.map((x, i) => {\n\t\t\t\tlet y = 0;\n\n\t\t\t\tlet isLast = i == numberOfPoints - 1;\n\t\t\t\tlet isFirst = i == 0;\n\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i], this.constants.barHeight, isFirst, isLast, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif (newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{\n\t\t\t\t\t\tmode: this.constants.mode,\n\t\t\t\t\t\tpos: this.constants.pos,\n\t\t\t\t\t\tshortenNumbers: this.constants.shortenNumbers,\n\t\t\t\t\t\tnumberFormatter: this.constants.numberFormatter\n\t\t\t\t\t})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{ mode: this.constants.mode, pos: this.constants.pos })\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{ labelPos: m.options.labelPos, stroke: m.options.stroke, mode: 'span', lineType: m.options.lineType })\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, { labelPos: r.options.labelPos, stroke: r.options.stroke, fill: r.options.fill })\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function () { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet { index, colWidth, rowHeight, squareSize, radius, xTranslate } = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif (weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif (day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif (newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function () { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{ zeroLine: newData.zeroLine }\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function () { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif (!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t\t\t\tthis.units = [];\n\t\t\tif (c.showDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tc.hideDotBorder\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (c.trailingDot && !c.showDots) {\n\t\t\t\tconst lastIndex = data.yPositions.length - 1;\n\t\t\t\tconst dot = datasetDot(\n\t\t\t\t\tdata.xPositions[lastIndex],\n\t\t\t\t\tdata.yPositions[lastIndex],\n\t\t\t\t\tdata.radius,\n\t\t\t\t\tc.color,\n\t\t\t\t\t(c.valuesOverPoints ? data.values[lastIndex] : ''),\n\t\t\t\t\tlastIndex,\n\t\t\t\t\tc.hideDotBorder\n\t\t\t\t);\n\n\t\t\t\tthis.units.push(dot);\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif (Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif (this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n", "import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, getExtraHeight } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\n\t\tm.paddings.right = 30;\n\t\tm.paddings.top = 60;\n\t\tm.paddings.bottom = 0;\n\n\t\tm.legendHeight = 80;\n\t\tm.baseHeight = (b.height) * 8 + getExtraHeight(m);\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif (bars.includes(bar)) {\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet width = bar.getAttribute('width') || bar.getBoundingClientRect().width;\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(width) / 2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length > 0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i] / s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, { name: title, value: (fraction * 100).toFixed(1) + \"%\" });\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n", "import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.type = 'pie';\n\t\tthis.sliceName = 'pieSlices';\n\n\t\tthis.arcFunc = makeArcPathStr;\n\t\tthis.shapeFunc = makeCircleStr;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tgetRadius() {\n\t\treturn this.height > this.width ? this.center.x : this.center.y;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = this.getRadius();\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1 : 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart, curEnd;\n\t\t\tif (this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? this.shapeFunc(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: this.arcFunc(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property) {\n\t\tconst { radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle + (property.angle / 2), radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path, i, flag, e) {\n\t\tif (!path) return;\n\t\tconst color = this.colors[i];\n\t\tif (flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\t// path.style.fill = lightenDarkenColor(color, 50);\n\t\t\t// path.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, { name: title, value: percent + \"%\" });\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\tthis.resetHover(path, color)\n\t\t}\n\t}\n\n\tresetHover(path, color) {\n\t\ttransform(path, 'translate3d(0,0,0)');\n\t\tthis.tip.hideTip();\n\t\tpath.style.fill = color;\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e) {\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get(this.sliceName).store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevActive = this.curActiveSlice;\n\t\tif (slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevActive, prevIndex, false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave() {\n\t\tthis.hoverSlice(this.curActiveSlice, this.curActiveSliceIndex, false);\n\t}\n}\n", "import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif (x === 0) {\n\t\treturn [0, 0];\n\t}\n\tif (isNaN(x)) {\n\t\treturn { mantissa: -6755399441055744, exponent: 972 };\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif (!isFinite(x)) {\n\t\treturn { mantissa: sig * 4503599627370496, exponent: 972 };\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x / Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min = 0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif (range > 5) {\n\t\tif (range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range / 2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif (range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range / noOfParts;\n\t}\n\n\t// Special case: 0\n\tif (range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor (var i = 0; i <= noOfParts; i++) {\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue = 0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue / Math.pow(10, exponent) : 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum = false, range = {}) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\tif (range.max !== undefined) {\n\t\tmaxValue = maxValue > range.max ? maxValue : range.max;\n\t}\n\t\n\tif (range.min !== undefined) {\n\t\tminValue = minValue < range.min ? minValue : range.min;\n\t}\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor (var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif (maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif (!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if (maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif (maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if (maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif (!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif (yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if (yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor (var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length - 1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function (prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor (var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n", "import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport {\n\tDAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK\n} from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport {\n\tgetExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE\n} from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data = this.data) {\n\t\tif (data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif (!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear(data.start.getFullYear() - 1);\n\t\t}\n\t\tif (!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif (parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif ([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH / 2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif (!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif (daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1]) - 1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width / 2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, { name: name, value: value, valueFirst: 1 }, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH / 2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH / 4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor (var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif (!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate = '') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor (var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif (col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor (var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif (empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n", "import { fillArray } from '../utils/helpers';\nimport {\n\tDEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH,\n\tSERIES_LABEL_SPACE_RATIO\n} from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif (!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d => {\n\t\t// Set values\n\t\tif (!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif (vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif (!d.chartType) {\n\t\t\tif (!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif (data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif (d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif (realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif (realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels = [], isSeries = true) {\n\tlet allowedSpace = (chartWidth / labels.length) * SERIES_LABEL_SPACE_RATIO;\n\tif (allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif (isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength / allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif (label.length > allowedLetters) {\n\n\t\t\tif (!isSeries) {\n\t\t\t\tif (allowedLetters - 3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters - 3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (i % seriesMultiple !== 0) {\n\t\t\t\t\tif (i !== (labels.length - 1)) {\n\t\t\t\t\t\tlabel = \"\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (i > (labels.length - (seriesMultiple / 2))) {\n\t\t\t\t\t\tlabel = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n", "import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendDot } from '../utils/draw';\nimport {\n\tgetTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE\n} from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif (this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\t\tthis.config.numberFormatter = options.axisOptions.numberFormatter;\n\n\t\tthis.config.yAxisRange = options.axisOptions.yAxisRange || {},\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t\tthis.config.legendRowHeight = 30;\n\t}\n\n\tprepareData(data = this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data = this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif (!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width / (s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth / 2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum, this.config.yAxisRange);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif (this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif (pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif (this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif (!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif (this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif (!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif (this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif (this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif (this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers,\n\t\t\t\t\tnumberFormatter: this.config.numberFormatter,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth / (stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth / 2);\n\t\t\t\t\tif (!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif (this.config.valuesOverPoints) {\n\t\t\t\t\t\tif (stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\tshowDots: this.lineOptions.showDots,\n\t\t\t\t\ttrailingDot: this.lineOptions.trailingDot,\n\t\t\t\t\thideDotBorder: this.lineOptions.hideDotBorder,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif (args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif (relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY > getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif (!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{ name: dbi.formattedLabel, value: '' },\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif (s.datasets.length > 1) {\n\t\t\tsuper.renderLegend(s.datasets);\n\t\t}\n\t}\n\n\tmakeLegend(data, index, x_pos, y_pos) {\n\t\treturn legendDot(\n\t\t\tx_pos,\n\t\t\ty_pos + 5, // Extra offset\n\t\t\t12, // size\n\t\t\t3, // dot radius\n\t\t\tthis.colors[index], // fill\n\t\t\tdata.name, //label\n\t\t\tnull, // value\n\t\t\t8.75, // base_font_size\n\t\t\tthis.config.truncateLegends // truncate legends\n\t\t);\n\t}\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif (this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif (this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif (this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif (this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index = this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif (index < 0) index = 0;\n\t\tif (index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif (index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index = this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength - 1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index = 0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif (datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n", "import '../css/charts.scss';\n\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };", "import PieChart from './PieChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { transform } from '../utils/animation';\n\nexport default class DonutChart extends PieChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.type = 'donut';\n\t\tthis.sliceName = 'donutSlices';\n\n\t\tthis.arcFunc = makeArcStrokePathStr;\n\t\tthis.shapeFunc = makeStrokeCircleStr;\n\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tgetRadius() {\n\t\treturn this.height > this.width\n\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t: this.center.y - this.strokeWidth / 2;\n\t}\n\n\tresetHover(path, color) {\n\t\ttransform(path,'translate3d(0,0,0)');\n\t\tthis.tip.hideTip();\n\t\tpath.style.stroke = color;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\tthis.sliceName,\n\t\t\t\t{},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n}\n", "import { Chart } from \"frappe-charts/dist/frappe-charts.esm\";\n\nfrappe.provide(\"frappe.ui\");\nfrappe.Chart = Chart;\n\nfrappe.ui.RealtimeChart = class RealtimeChart extends frappe.Chart {\n\tconstructor(element, socketEvent, maxLabelPoints = 8, data) {\n\t\tsuper(element, data);\n\t\tif (data.data.datasets[0].values.length > maxLabelPoints) {\n\t\t\tfrappe.throw(\n\t\t\t\t__(\n\t\t\t\t\t\"Length of passed data array is greater than value of maximum allowed label points!\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tthis.currentSize = data.data.datasets[0].values.length;\n\t\tthis.socketEvent = socketEvent;\n\t\tthis.maxLabelPoints = maxLabelPoints;\n\n\t\tthis.start_updating = function () {\n\t\t\tfrappe.realtime.on(this.socketEvent, (data) => {\n\t\t\t\tthis.update_chart(data.label, data.points);\n\t\t\t});\n\t\t};\n\n\t\tthis.stop_updating = function () {\n\t\t\tfrappe.realtime.off(this.socketEvent);\n\t\t};\n\n\t\tthis.update_chart = function (label, data) {\n\t\t\tif (this.currentSize >= this.maxLabelPoints) {\n\t\t\t\tthis.removeDataPoint(0);\n\t\t\t} else {\n\t\t\t\tthis.currentSize++;\n\t\t\t}\n\t\t\tthis.addDataPoint(label, data);\n\t\t};\n\t}\n};\n"],
  "mappings": "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",
  "names": []
}
